{% extends "base.twig" %}

{% block content %}
	<div class="wrapper-row">
		<div class="fix-container">
			<div class="background-text parallax">
				<span id="title">Strategy & Empathy</span>
				<span id="subtitle">Nathan Hulsey is a user experience designer and creative director based in Boston Massachusettes.
					He believes that design is a strategic tool for businesses and a language for understanding human beings.</span>

				<svg class="svg-streak-index" width="20px" height="723px" viewBox="716 290 12 723" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
					<!-- Generator: Sketch 42 (36781) - http://www.bohemiancoding.com/sketch -->
					<defs>
						<linearGradient x1="50%" y1="-2.48949813e-15%" x2="50%" y2="100%" id="linearGradient-1">
							<stop stop-color="#fb9c6d" offset="0%"></stop>
							<stop stop-color="#ffffff" stop-opacity="0" offset="100%"></stop>
						</linearGradient>
					</defs>
					<rect id="Rectangle-2" stroke="none" fill="url(#linearGradient-1)" fill-rule="evenodd" x="712" y="290" width="20" height="723"></rect>
				</svg>
			</div>

			</div>
		</div>
	</div>

	<div class="project-wrapper">
			<div class="wrapper-row">
				<div class="container">
					<div class="masonry">
					{% for post in projects %}
						{% include ['tease-'~post.post_type~'.twig'] %}
				{% endfor %}
				</div>
			</div>
		</div>
	</div>


<script>


'use strict';
var target = document.querySelector('.parallax');

// if there are any transforms already on the target element,
// cache them. if not, set value of computed to null
var computed = window.getComputedStyle(target).transform || null;

// listen for scroll event
window.addEventListener('scroll', function () {

	// cache scroll position
	var scroll = document.body.scrollTop;

	// rate is an arbitrary value that
	// changes the speed of the scroll
	// larger value = slower scroll
	var rate = 1.8;
	var translate = (scroll / rate).toFixed(2);
	var opacity = Math.min(Math.max((1 - scroll / window.innerHeight * 2).toFixed(2), 0), 1);

	// ease easing equation https://www.youtube.com/watch?v=yWhgniVHROw
	// let value = 0
	// value += (translate - value) * .9

	// if there were any transforms already on the target
	// from before, include
	// otherwise, don't include
	// const transform = computed ? `${computed} translateY(${translate}px) translateZ(0)` : `translateY(${translate}px) translateZ(0)`

	// finally actually
	requestAnimationFrame(function () {
		target.style.opacity = opacity;
	});
});
	</script>

{% endblock %}
